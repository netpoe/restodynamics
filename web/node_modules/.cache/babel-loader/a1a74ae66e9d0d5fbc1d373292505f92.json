{"ast":null,"code":"import _defineProperty from \"/Users/GustavoIbarra/Projects/ELCOMALOTE/restodynamics/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/GustavoIbarra/Projects/ELCOMALOTE/restodynamics/web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/GustavoIbarra/Projects/ELCOMALOTE/restodynamics/web/src/views/stock/StockUnitIndex.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { AppBar, Box, Button, Container, Grid, Paper, Table, TableBody, TableCell, TableHead, TableRow, Toolbar, Typography, withStyles } from \"@material-ui/core\";\nimport { get } from \"lodash\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"urql\";\nimport { QueryStockUnits } from \"../../api/queries\";\nimport { routes } from \"../routes\";\nexport const StockUnitIndex = withStyles(theme => ({\n  appBar: {\n    marginBottom: theme.spacing(3),\n    [theme.breakpoints.down(\"sm\")]: {}\n  },\n  toolbar: {\n    justifyContent: \"space-between\",\n    [theme.breakpoints.down(\"sm\")]: {}\n  }\n}))(({\n  classes,\n  history\n}) => {\n  const _useQuery = useQuery({\n    query: QueryStockUnits\n  }),\n        _useQuery2 = _slicedToArray(_useQuery, 1),\n        stockUnitsQuery = _useQuery2[0];\n\n  const handleOnTableRowClick = (e, id) => {\n    history.push(\"\".concat(routes.stock.details, \"/\").concat(id));\n  };\n\n  return React.createElement(React.Fragment, null, stockUnitsQuery.fetching ? React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Cargando\") : stockUnitsQuery.error || stockUnitsQuery.data == null ? React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Error\") : React.createElement(Box, {\n    minHeight: \"100vh\",\n    bgcolor: \"default\",\n    pt: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Container, {\n    maxWidth: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    className: classes.appBar,\n    elevation: 0,\n    position: \"relative\",\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    className: classes.toolbar,\n    disableGutters: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Inventario [fecha de \\xFAltimo inventario]\")), React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"large\",\n    variant: \"outlined\",\n    color: \"default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Nuevo inventario\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: routes.stock.details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"large\",\n    variant: \"contained\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Nuevo art\\xEDculo\"))))))), React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(StyledTableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Nombre\"), React.createElement(StyledTableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Categor\\xEDa\"), React.createElement(StyledTableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Proveedor\"), React.createElement(StyledTableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Expira en\"), React.createElement(StyledTableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Cantidad\"), React.createElement(StyledTableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"\\xDAltimo costo\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, stockUnitsQuery.data.stockUnits.map((row, i) => React.createElement(TableRow, {\n    key: i,\n    onClick: e => handleOnTableRowClick(e, row.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, row.name), React.createElement(TableCell, {\n    style: {\n      textTransform: \"capitalize\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, get(row.stockUnitCategory, [\"es_ES\"], null))))))))));\n});\nconst StyledTableCell = withStyles(theme => ({\n  head: _objectSpread({\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  }, theme.typography.body1, {\n    fontWeight: 600\n  })\n}))(TableCell);","map":{"version":3,"sources":["/Users/GustavoIbarra/Projects/ELCOMALOTE/restodynamics/web/src/views/stock/StockUnitIndex.tsx"],"names":["AppBar","Box","Button","Container","Grid","Paper","Table","TableBody","TableCell","TableHead","TableRow","Toolbar","Typography","withStyles","get","React","Link","useQuery","QueryStockUnits","routes","StockUnitIndex","theme","appBar","marginBottom","spacing","breakpoints","down","toolbar","justifyContent","classes","history","query","stockUnitsQuery","handleOnTableRowClick","e","id","push","stock","details","fetching","error","data","table","stockUnits","map","row","i","name","textTransform","stockUnitCategory","StyledTableCell","head","backgroundColor","palette","common","black","color","white","typography","body1","fontWeight"],"mappings":"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","sourcesContent":["import {\n  AppBar,\n  Box,\n  Button,\n  Container,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Toolbar,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport { History } from \"history\";\nimport { get } from \"lodash\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"urql\";\nimport { QueryStockUnits } from \"../../api/queries\";\nimport { routes } from \"../routes\";\n\nexport const StockUnitIndex = withStyles(theme => ({\n  appBar: {\n    marginBottom: theme.spacing(3),\n    [theme.breakpoints.down(\"sm\")]: {},\n  },\n  toolbar: {\n    justifyContent: \"space-between\",\n    [theme.breakpoints.down(\"sm\")]: {},\n  },\n}))(({ classes, history }: { classes: any; history: History }) => {\n  const [stockUnitsQuery] = useQuery({\n    query: QueryStockUnits,\n  });\n\n  const handleOnTableRowClick = (e: any, id: string) => {\n    history.push(`${routes.stock.details}/${id}`);\n  };\n\n  return (\n    <>\n      {stockUnitsQuery.fetching ? (\n        <Typography>Cargando</Typography>\n      ) : stockUnitsQuery.error || stockUnitsQuery.data == null ? (\n        <Typography>Error</Typography>\n      ) : (\n        <Box minHeight=\"100vh\" bgcolor=\"default\" pt={4}>\n          <Container maxWidth=\"xl\">\n            <AppBar className={classes.appBar} elevation={0} position=\"relative\" color=\"inherit\">\n              <Toolbar className={classes.toolbar} disableGutters>\n                <Box>\n                  <Typography variant=\"h6\">Inventario [fecha de último inventario]</Typography>\n                </Box>\n                <Box>\n                  <Grid container spacing={2}>\n                    <Grid item>\n                      <Button size=\"large\" variant=\"outlined\" color=\"default\">\n                        Nuevo inventario\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Link to={routes.stock.details}>\n                        <Button size=\"large\" variant=\"contained\" color=\"primary\">\n                          Nuevo artículo\n                        </Button>\n                      </Link>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </Toolbar>\n            </AppBar>\n            <Paper>\n              <Table className={classes.table}>\n                <TableHead>\n                  <TableRow>\n                    <StyledTableCell>Nombre</StyledTableCell>\n                    <StyledTableCell>Categoría</StyledTableCell>\n                    <StyledTableCell>Proveedor</StyledTableCell>\n                    <StyledTableCell>Expira en</StyledTableCell>\n                    <StyledTableCell>Cantidad</StyledTableCell>\n                    <StyledTableCell>Último costo</StyledTableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {stockUnitsQuery.data.stockUnits.map((row: any, i: number) => (\n                    <TableRow key={i} onClick={(e: any) => handleOnTableRowClick(e, row.id)}>\n                      <TableCell>{row.name}</TableCell>\n                      <TableCell style={{ textTransform: \"capitalize\" }}>\n                        {get(row.stockUnitCategory, [\"es_ES\"], null)}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Paper>\n          </Container>\n        </Box>\n      )}\n    </>\n  );\n});\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n    ...theme.typography.body1,\n    fontWeight: 600,\n  },\n}))(TableCell);\n"]},"metadata":{},"sourceType":"module"}